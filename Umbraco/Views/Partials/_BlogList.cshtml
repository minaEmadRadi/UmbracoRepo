@using PocApp.Domain.models.PaginatedList
@using PocApp.Domain.models.ViewComponentModels
@inject IVariationContextAccessor VariationContextAccessor

@model PaginatedList<BlogsView>
@{
    var currentCulture = VariationContextAccessor.VariationContext?.Culture;
    var prevDisbled = !Model.HasPreviousPage ? "d-none" : "";
    var nextDisbled = !Model.HasNextPage ? "d-none" : "";
}

@foreach (var item in Model ?? new List<BlogsView>())
{
    <hr class="my-4" />

    <div class="post-preview">
        <a href="@item.BlogUrl">
            <h2 class="post-title">@item.Title</h2>
            <h3 class="post-subtitle">@item.SubTitle</h3>
        </a>
        <span class="badge bg-secondary">@item.Category</span>
        <p class="post-meta">
            Posted by
            <a href="#!">@item.CreatedBy</a>
            on @item.CreatedDate
        </p>
    </div>
    <hr class="my-4" />
}
<div class="d-flex justify-content-between mb-4">
    @if (ViewBag.page > 1)
    {
        <a class="btn btn-primary text-uppercase @prevDisbled" onclick="loadPage(@(ViewBag.page - 1))"> ← Back</a>
    }

    @if (ViewBag.page < ViewBag.TotalPages)
    {
        <a class="btn btn-primary text-uppercase @nextDisbled" onclick="loadPage(@(ViewBag.page + 1))"> Next → </a>
    }
</div>
